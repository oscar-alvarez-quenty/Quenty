# Makefile for Quenty Microservices

.PHONY: help build up down logs ps clean test migrate

# Default target
help:
	@echo "Available commands:"
	@echo "  make build    - Build all microservice images"
	@echo "  make up       - Start all microservices"
	@echo "  make down     - Stop all microservices"
	@echo "  make logs     - View logs for all services"
	@echo "  make ps       - List running services"
	@echo "  make clean    - Remove all containers and volumes"
	@echo "  make test     - Run tests for all services"
	@echo "  make migrate  - Run database migrations"

# Build all microservice images
build:
	docker-compose -f docker-compose.microservices.yml build

# Start all microservices
up:
	docker-compose -f docker-compose.microservices.yml up -d
	@echo "Waiting for services to be healthy..."
	@sleep 10
	@echo "Services started. Check health at http://localhost:8000/services/health"

# Stop all microservices
down:
	docker-compose -f docker-compose.microservices.yml down

# View logs
logs:
	docker-compose -f docker-compose.microservices.yml logs -f

# List running services
ps:
	docker-compose -f docker-compose.microservices.yml ps

# Clean up everything
clean:
	docker-compose -f docker-compose.microservices.yml down -v
	docker system prune -f

# Run tests
test:
	@echo "Running unit tests for all services..."
	@for service in customer order pickup international-shipping microcredit analytics reverse-logistics franchise; do \
		echo "Testing $$service service..."; \
		docker-compose -f docker-compose.microservices.yml exec $$service-service pytest || true; \
	done

# Run migrations for all services
migrate:
	@echo "Running migrations for all services..."
	@for service in customer order pickup international-shipping microcredit analytics reverse-logistics franchise; do \
		echo "Migrating $$service database..."; \
		docker-compose -f docker-compose.microservices.yml exec $$service-service alembic upgrade head || true; \
	done

# Service-specific commands
customer-logs:
	docker-compose -f docker-compose.microservices.yml logs -f customer-service

order-logs:
	docker-compose -f docker-compose.microservices.yml logs -f order-service

gateway-logs:
	docker-compose -f docker-compose.microservices.yml logs -f api-gateway

# Health checks
health-check:
	@curl -s http://localhost:8000/services/health | python -m json.tool

# Development commands
dev-build:
	docker-compose -f docker-compose.microservices.yml build --no-cache

dev-restart:
	docker-compose -f docker-compose.microservices.yml restart

# Monitoring commands
monitoring-up:
	@echo "Access monitoring services at:"
	@echo "  Consul:     http://localhost:8500"
	@echo "  Prometheus: http://localhost:9090"
	@echo "  Grafana:    http://localhost:3000"
	@echo "  Jaeger:     http://localhost:16686"
	@echo "  RabbitMQ:   http://localhost:15672"